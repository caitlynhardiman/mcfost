stellar parameters
==================
... will be overwritten by MCFOST/MCMax, 
no need for fUV,pUV,Xray_Lum,Xray_Temp if you have a StarSpectrum.in


irradiation
===========
CRI: value from (Dalgarno, McCall 19xx), no cosmic ray absorption included, 
     may overestimate ionisation rate in midplane, but good for stability & speed


dust parameters
===============
irrelevant for MCMax/MCFOST users, because dust opacities will be overwritten
dust volumes: silicate & carbon together should add up to 75%

PAH_in_RT: use .true. if you want/have PAH opacities in your rad.transfer!
           For pure ProDiMo models, this option is advisable, but it doesn't 
           run cleanly yet, and there are some unsolved physical questions remaining.
           For MCMax/MCFOST users, put this to .true. if your model has PAHs. 

gas parameters
==============
fPAH & ChemHeatFac: free parameters for the moment.
ChemHeatFac is important parameter for ro-vib CO and Spitzer molecular lines, 
fPAH is important for lines forming further up (e.g. [OI]63mic)

alpha_vis and Mdot: viscous heating not included in standards 
                    (i.e. passive disk =0 =0)

v_turb = 0.15km/s by default

UMIST_2012: includes three-body reactions from UMIST_2006

handle_UMIST: don't touch, unless you are an expert!


disk mass & shape
=================
all these parameters will be overruled by MCFOST/MCMax 


big molecules
=============
H2O_rovibration: don't touch, it's important for Tgas!
other options (not DIANA standards) are
  Hatom_bb,Hatom_bf,UV_H2,custom_COrovib
  CO2_LTE_cooling,HCNrovib_LTE_cooling,CH4_LTE_cooling,NH3rovib_LTE_cooling
  OHrovib_LTE_cooling,C2H2_LTE_cooling, all .false. by default


dimensions
==========
NXX,NZZ: 70x70 is standard, 30x30 is OK for tests, but NOT good enough for 
         publication, better use 100x100 for publication.  Use more NXX is you 
         have several radial zones

usually, you shouldn't touch these ...
NLAM           : number of wavelengths bins for computing the temperatures
refine_Spitzer : double bin-resolution between 5 and 30mic 
NUV,N1UV       : number of bins in UV band 1 and UV band 2
Ntheta, Nphi   : ray resolution in theta and phi angles
RTitmax        : max. number of RT iterations
tau_cutoff     : not increase opacities further if tau_rad and tau_ver > tau_cutoff


accelerations
=============
we decided NOT to use any accelerations by DIANA default, which means that
ProDiMo will run very slow.  You can speed up ProDiMo a lot when you use
these accelerations

parallel_chem: parallel chemistry with openmp. YOU NEED TO COMPILE CAREFULLY AND 
               RUN A LOT OF TESTS before using that option, see 
               https://forge.roe.ac.uk/trac/ProDiMo/wiki/Compiler_Options_Linux,
	       https://forge.roe.ac.uk/trac/ProDiMo/wiki/accelerate_ProDiMo,
	       https://forge.roe.ac.uk/trac/ProDiMo/wiki/Parallel_ProDiMo

ignore_Tg_midplane: not solve for Tgas at all in deep midplane, use Tdust here.
                    This is a PHYSICAL assumption, not a numerical acceleration.
                    Should be OK, but you need to check.

use_chemsol: create, use, and clean database of chemical concentrations as function
             of Av, nH, Tgas, Tdust. This improves performance if you run a lot
             of models with similar parameters in the same directory. It helps
             to get the chemistry to converge quicker.


tolerances
==========
cputime_max: max. CPU time for advance_chemistry, preventing to spend unlimited
             time on one point if it doesn't converge.  Too small value will,
             however, make ProDiMo slower, because it never integrates long enough
             to find a real solution, so it tries again and again ...
             Use larger value for large DIANA standards.

switches
========
verbose_level: >0 means to produce more input, and to enter interactive mode 
               where the user needs to manually input what he wants

for the DIANA standards, you shouldn't change these ...

solve_temp:    solve the heating/cooling balance

chi_from_RT:   take UV strengths chi from UV rad. transfer

Td_from_RT:    calculate dust temp. from rad. transfer

Jback_from_RT: take background Jnu from rad. transfer

UVpumping:     use large model atoms

PAH_from_RT:   if your chemistry has PAHs, use the computed PAH-,PAH,PAH+... 
               concentrations charges from chemistry, use Jnu from rad.trans.,
               and compute PAH heating from cross-sections.  Irrelevant for
               small DIANA standard, which doesn't have PAHs in chemistry

Rphoto_from_RT: calculate UV-cross-sections and Jnu from rad.transfer
                to compute photo-rates.

Rphoto_bandint: preserve high-resolution spectral shape of UV when 
                computing the photo-rates:
		Jnu/Jband = Inu^star/Iband^star
		This is important in particular when you have a line 
                dominated input UV

NewChemScan:   keep it=.true., it's more stable


start from MCFOST/MCMax? 
========================
Parameter.in has defaults for pure ProDiMo. For your very first model, 
however, put restart=.false. 
If you want to run ProDiMo on top of an MCFOST/MCMax, say ...

.false.   ! radtrans     
.false.   ! restart      
.true.    ! readMCFOST   
forProDiMo.fits.gz

and specify things you need to change, e.g. NZONES, Rin, Rout, and ...    
dust_to_gas,  fPAH
d2ust_to_gas, f2PAH
d3ust_to_gas, f3PAH
